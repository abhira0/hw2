name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Format code with autopep8
      run: |
        autopep8 --in-place --recursive .
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add .
        git commit -m "Auto format code with autopep8" || echo "No changes to commit"
        git push || echo "No changes to push"

  badges:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Update PyLint dynamic badge on README.md
      uses: Silleellie/pylint-github-action@v2
      with:
        lint-path: |
          src
          tests
        python-version: 3.12
        requirements-path: requirements.txt
        readme-path: README.md
        badge-text: PyLint
        color-bad-score: red # pylint scores < 5.
        color-ok-score: orange # [5,8)
        color-good-score: yellow # [8,10)
        color-perfect-score: brightgreen # pylint scores == 10
    - name: Clean pylint files
      run: |
        rm -rf pylint_score.txt
    - name: Run pyright
      run: |
        pyright src/* tests/*
      continue-on-error: true 
    - name: Determine badge color
      run: |
        if [ $? -eq 0 ]; then
          echo "PYRIGHT_BADGE_COLOR=passing-brightgreen" >> $GITHUB_ENV
        else
          echo "PYRIGHT_BADGE_COLOR=failing-red" >> $GITHUB_ENV
        fi
    - name: Update README with badge
      run: |
        BADGE_URL="https://img.shields.io/badge/pyright-${{ env.PYRIGHT_BADGE_COLOR }}.svg"
        echo "Updating README with badge URL: $BADGE_URL"
        sed -i '/!\[Pyright Analysis\]/c\![Pyright Analysis]('"$BADGE_URL"')' README.md
        cat README.md
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git status
        git diff --quiet || git commit -am "Update Pyright badge in README"
        git diff --quiet || git push

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with pylint
      run: |
        pylint src/* tests/*
      continue-on-error: false
    - name: Run pyright
      run: |
        pyright src/* tests/*
      continue-on-error: false
    - name: Test with pytest
      run: |
        pytest
